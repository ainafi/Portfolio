"use client";
import { animate, motion } from "framer-motion";
import React, { useEffect } from "react";
import { cn } from  "../../utils/cn";


export function CardDemo() {
  return (
      <CardSkeletonContainer>
        <Skeleton />
      </CardSkeletonContainer>
  );
}

const Skeleton = () => {
  const scale = [1, 1.1, 1];
  const transform = ["translateY(0px)", "translateY(-4px)", "translateY(0px)"];
  const sequence = [
    [
      ".circle-1",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
    [
      ".circle-2",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
    [
      ".circle-3",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
    [
      ".circle-4",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
    [
      ".circle-5",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
  ];

  useEffect(() => {
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    animate(sequence, {
      repeat: Infinity,
      repeatDelay: 1,
    });
  }, []);
  return (
    <div className="p-8 overflow-hidden h-full relative flex items-center justify-center">
      <div className="flex flex-row flex-shrink-0 justify-center items-center gap-2">
        <Container className="h-8 w-8 circle-1">
          <Sass className="h-4 w-4 " />
        </Container>
        <Container className="h-12 w-12 circle-2">
          <Php className="h-6 w-6 dark:text-white" />
        </Container>
        <Container className="circle-3">
          <Javascript className="h-6 w-6 " />
        </Container>
        <Container className="h-12 w-12 circle-4">
          <Typescript className="h-4 w-4 " />
        </Container>
        <Container className="h-8 w-8 circle-5">
          <HTML className="h-8 w-8 dark:text-white" />
        </Container>
      </div>

      <div className="h-40 w-px absolute top-20 m-auto z-40 bg-gradient-to-b from-transparent via-cyan-500 to-transparent animate-move">
        <div className="w-10 h-32 top-1/2 -translate-y-1/2 absolute -left-10">
          <Sparkles />
        </div>
      </div>
    </div>
  );
};
const Sparkles = () => {
  const randomMove = () => Math.random() * 2 - 1;
  const randomOpacity = () => Math.random();
  const random = () => Math.random();
  return (
    <div className="absolute inset-0">
      {[...Array(12)].map((_, i) => (
        <motion.span
          key={`star-${i}`}
          animate={{
            top: `calc(${random() * 100}% + ${randomMove()}px)`,
            left: `calc(${random() * 100}% + ${randomMove()}px)`,
            opacity: randomOpacity(),
            scale: [1, 1.2, 0],
          }}
          transition={{
            duration: random() * 2 + 4,
            repeat: Infinity,
            ease: "linear",
          }}
          style={{
            position: "absolute",
            top: `${random() * 100}%`,
            left: `${random() * 100}%`,
            width: `2px`,
            height: `2px`,
            borderRadius: "50%",
            zIndex: 1,
          }}
          className="inline-block bg-black dark:bg-white"
        ></motion.span>
      ))}
    </div>
  );
};


//   className,
//   children,
// }: {
//   className?: string;
//   children: React.ReactNode;
// }) => {
//   return (
//     <div
//       className={cn(
//         "max-w-sm w-full mx-auto p-8 rounded-xl border border-[rgba(255,255,255,0.10)] dark:bg-[rgba(40,40,40,0.70)] bg-gray-100 shadow-[2px_4px_16px_0px_rgba(248,248,248,0.06)_inset] group",
//         className
//       )}
//     >
//       {children}
//     </div>
//   );
// };


export const CardSkeletonContainer = ({
  className,
  children,
  showGradient = true,
}: {
  className?: string;
  children: React.ReactNode;
  showGradient?: boolean;
}) => {
  return (
    <div
      className={cn(
        "h-[7rem] md:h-[10rem] rounded-xl z-40",
        className,
        showGradient &&
          "bg-neutral-300 dark:bg-[rgba(40,40,40,0.70)] [mask-image:radial-gradient(50%_50%_at_50%_50%,white_0%,transparent_100%)]"
      )}
    >
      {children}
    </div>
  );
};

const Container = ({
  className,
  children,
}: {
  className?: string;
  children: React.ReactNode;
}) => {
  return (
    <div
      className={cn(
        `h-16 w-16 rounded-full flex items-center justify-center bg-[rgba(248,248,248,0.01)]
    shadow-[0px_0px_8px_0px_rgba(248,248,248,0.25)_inset,0px_32px_24px_-16px_rgba(0,0,0,0.40)]
    `,
        className
      )}
    >
      {children}
    </div>
  );
};
export const Sass = ({ className }: { className?: string }) => {
    return (
        <svg className={className} width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_11_37)">
        <path d="M55.9356 37.3412C53.6631 37.3583 51.6954 38.086 50.045 39.1695C49.4356 37.5614 48.8262 36.1563 48.7248 35.107C48.6105 33.8882 48.4709 33.1433 48.6105 31.6877C48.75 30.2318 49.3848 28.1667 49.3848 27.9974C49.372 27.8451 49.245 27.1003 47.9375 27.0834C46.63 27.0664 45.5 27.4219 45.3731 27.8789C45.2461 28.336 44.9922 29.3855 44.8272 30.4688C44.5987 32.0599 42.2119 37.6967 40.8535 40.6589C40.4092 39.5079 40.0284 38.4922 39.9521 37.6796C39.8379 36.461 39.6982 35.716 39.8379 34.2605C39.9776 32.8046 40.6123 30.7396 40.6123 30.5704C40.5996 30.418 40.4727 29.6732 39.1652 29.6563C37.8575 29.6394 36.7277 29.9948 36.6007 30.4519C36.4738 30.9089 36.3341 31.9922 36.0549 33.0417C35.7881 34.0912 32.6143 43.5026 31.7891 45.9571C31.3702 47.2097 31.0021 48.2084 30.7354 48.8855C30.4688 49.5625 30.7227 48.9362 30.6973 49.0039C30.4688 49.5795 30.3418 49.9011 30.3418 49.9011V49.9182C30.1641 50.3414 29.9737 50.7474 29.8847 50.7474C29.8212 50.7474 29.6942 49.6133 29.9101 48.0562C30.3798 44.7891 31.5224 39.6942 31.5098 39.508C31.5098 39.4234 31.7255 38.5261 30.7733 38.0692C29.8466 37.6122 29.5166 38.3739 29.4403 38.3739C29.3642 38.3739 29.3007 38.6447 29.3007 38.6447C29.3007 38.6447 30.329 32.9066 27.3329 32.9066C25.454 32.9066 22.8642 35.6319 21.5819 38.1202C20.7694 38.7126 19.0429 39.9651 17.2148 41.3025C16.5165 41.8103 15.7929 42.3519 15.1073 42.8428L14.9678 42.6394C11.3369 37.4766 4.62113 33.8204 4.90043 26.8803C5.00199 24.3581 5.66215 17.7058 17.799 9.64848C27.7394 3.04692 35.6994 4.85812 37.083 8.88676C39.0508 14.642 32.8301 25.3399 22.4963 26.8803C18.5607 27.4727 16.4912 25.4414 15.9709 24.6797C15.425 23.8842 15.3488 23.8503 15.1457 24.0026C14.8156 24.2396 15.0187 24.9506 15.1457 25.3737C15.4504 26.4401 16.7199 28.336 18.8781 29.2839C20.7696 30.1133 25.3908 30.5704 30.9767 27.6928C37.2355 24.4597 42.1232 15.4883 40.6886 7.98963C39.2287 0.355513 29.7326 -2.1497 20.757 2.099C15.4121 4.63806 9.62308 8.599 5.45902 13.7956C0.507848 19.9571 -0.279261 25.3399 0.0508168 27.5743C1.20622 35.5469 9.44535 40.7435 12.7461 44.586C12.5811 44.7043 12.4287 44.8228 12.2891 44.9245C10.6387 46.0077 4.35453 50.392 2.78031 55.0298C1.00297 60.2772 3.05961 64.0521 4.4307 64.5599C8.67093 66.1342 13.0127 63.3073 15.3614 58.6524C17.6972 53.9974 17.418 47.9545 16.3389 45.1954L16.3007 45.0938L17.5956 44.0782C18.4336 43.418 19.2588 42.8086 19.9823 42.2837C19.5762 43.7564 19.2841 45.4999 19.1319 48.0389C18.9541 51.0183 19.8682 54.8775 21.0743 56.4009C21.6075 57.0609 22.2422 57.078 22.6358 57.078C24.0323 57.078 24.667 55.5375 25.3653 53.6926C26.2286 51.4413 26.9903 48.8345 26.9903 48.8345C26.9903 48.8345 26.0381 55.8931 28.6407 55.8931C29.5928 55.8931 30.545 54.2512 30.9766 53.4048V53.4217C30.9766 53.4217 31.002 53.371 31.0528 53.2525C31.106 53.1475 31.1568 53.0403 31.2051 52.931V52.8972C31.586 52.017 32.4366 50.0027 33.7061 46.668C35.3437 42.3685 36.918 36.9857 36.918 36.9857C36.918 36.9857 37.0704 38.306 37.5401 40.4727C37.8192 41.7593 38.4286 43.1641 38.8983 44.5352C38.5175 45.2461 38.289 45.6526 38.289 45.6526L38.3017 45.6695C37.9971 46.2112 37.6542 46.7868 37.2989 47.3622C36.0039 49.4273 34.4551 51.7803 34.252 52.4574C34.0108 53.2528 34.0616 53.8453 34.5313 54.3194C34.8741 54.6579 35.4834 54.7255 36.1309 54.6579C37.2989 54.5562 38.1114 54.167 38.5176 53.9299C39.1524 53.6252 39.876 53.1682 40.5743 52.4911C41.8438 51.2387 42.6182 49.4613 42.542 47.0915C42.5039 45.7881 42.1866 44.5017 41.793 43.2829C41.9073 43.0629 42.0216 42.8427 42.1358 42.6058C44.1416 38.6955 45.6905 34.3962 45.6905 34.3962C45.6905 34.3962 45.8428 35.7165 46.3125 37.8832C46.5536 38.9835 47.0362 40.1854 47.4678 41.3703C45.5889 43.4185 44.4082 45.7883 44.002 47.3456C43.253 50.2232 43.8369 51.5266 44.9414 51.8313C45.4364 51.9667 46.1475 51.662 46.6806 51.3573C47.3407 51.0696 48.1405 50.5785 48.877 49.8508C50.1465 48.5982 51.3653 46.8547 51.3018 44.5019C51.2637 43.4185 51.0479 42.3521 50.7559 41.3365C52.3555 40.4563 54.4247 39.9485 57.0528 40.3716C62.7022 41.2519 63.8194 45.9576 63.6037 47.9211C63.3879 49.8848 62.2072 50.968 61.8135 51.3065C61.42 51.6282 61.293 51.7468 61.3311 51.9836C61.3819 52.3393 61.5596 52.3222 61.9024 52.2546C62.3721 52.1529 64.8731 50.6466 64.9746 47.0243C65.127 42.3687 61.8135 37.2906 55.9356 37.3412ZM12.3653 56.9258C10.4991 59.6511 7.87113 60.6836 6.75394 59.8034C5.54789 58.8724 6.01749 54.8607 8.31546 51.9662C9.71195 50.2058 11.5274 48.5808 12.7207 47.5821C12.9873 47.362 13.3936 47.0406 13.876 46.6511C13.9522 46.5835 14.003 46.5495 14.003 46.5495C14.0918 46.4818 14.1934 46.3972 14.295 46.3125C15.1455 50.4428 14.333 54.0651 12.3653 56.9258ZM26.0127 44.5521C25.3653 46.668 23.9942 52.1016 23.169 51.7969C22.4579 51.543 22.0264 47.4297 23.0292 43.3672C23.537 41.3189 24.6161 38.8815 25.2509 37.9335C26.2793 36.41 27.3964 35.9022 27.6758 36.5285C28.0059 37.3412 26.419 43.2318 26.0127 44.5521ZM37.2735 51.7292C36.9942 51.9156 36.7403 52.0508 36.626 51.9494C36.5371 51.8817 36.7401 51.6278 36.7401 51.6278C36.7401 51.6278 38.1493 49.6135 38.7079 48.6825C39.0253 48.141 39.4062 47.5147 39.8124 46.8036V47.0067C39.8125 49.4441 38.0606 51.0691 37.2735 51.7292ZM45.9569 49.0886C45.7538 48.8855 45.7793 48.2592 46.4648 46.2956C46.7315 45.517 47.3407 44.2136 48.3944 42.9779C48.5214 43.4857 48.5977 43.9764 48.5849 44.4336C48.5723 47.4805 46.9473 48.6146 45.9569 49.0886Z" fill="#CF649A"/>
        </g>
        <defs>
        <clipPath id="clip0_11_37">
        <rect width="65" height="65" fill="white"/>
        </clipPath>
        </defs>
        </svg>
        
    );
  };
   
  export const HTML = ({ className }: { className?: string }) => {
    return (
      <svg className={className} width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_11_27)">
        <path d="M5.4427 58.1913L0 0.108643L65 0.225363L59.2449 58.1913L32.7453 64.8915L5.4427 58.1913Z" fill="#E34F26"/>
        <path d="M32.7454 59.2819V5.64014L59.5128 5.71795L54.7395 53.711L32.7454 59.2819Z" fill="#EF652A"/>
        <path d="M52.152 19.0411L52.91 11.9509H11.733L14.008 33.6883H42.4261L41.3117 42.9596L32.2107 45.1017L22.9759 42.7646L22.4853 37.233H14.3205L15.4359 48.5301L32.2101 52.6203L49.118 48.5301L51.393 26.4814H21.548L20.7004 19.0411H52.152Z" fill="white"/>
        </g>
        <defs>
        <clipPath id="clip0_11_27">
        <rect width="65" height="65" fill="white"/>
        </clipPath>
        </defs>
    </svg>

    );
  };
  export const Typescript = ({ className }: { className?: string }) => {
    return (
        <svg className={className} width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M58.2725 4.0625H6.7275C5.25566 4.0625 4.0625 5.25566 4.0625 6.7275V58.2725C4.0625 59.7443 5.25566 60.9375 6.7275 60.9375H58.2725C59.7443 60.9375 60.9375 59.7443 60.9375 58.2725V6.7275C60.9375 5.25566 59.7443 4.0625 58.2725 4.0625Z" fill="#3178C6"/>
        <path fill-rule="evenodd" clip-rule="evenodd" d="M37.0601 48.2606V54.4924C38.1924 55.0513 39.3991 55.4446 40.6432 55.6604C42.081 55.9258 43.5403 56.0564 45.0023 56.0504C46.4272 56.0572 47.8488 55.9135 49.2436 55.6218C50.4958 55.3688 51.6905 54.8867 52.7678 54.1999C53.7678 53.5544 54.5921 52.6708 55.1667 51.6284C56.1957 49.4698 56.3315 46.9924 55.5445 44.7343C55.2124 43.8899 54.7175 43.119 54.0881 42.4654C53.4124 41.7704 52.645 41.1711 51.807 40.684C50.8422 40.119 49.8398 39.6208 48.8068 39.1931C47.9943 38.8559 47.2631 38.5282 46.6131 38.2099C46.0358 37.9335 45.4833 37.608 44.9617 37.237C44.5532 36.9506 44.1984 36.5944 43.9136 36.1848C43.6675 35.8129 43.5394 35.3754 43.5459 34.9295C43.5405 34.5191 43.6548 34.116 43.875 33.7696C44.114 33.4071 44.433 33.1041 44.8073 32.884C45.2649 32.6146 45.7628 32.4205 46.282 32.3092C46.9194 32.1676 47.5709 32.0994 48.2239 32.106C48.773 32.1079 49.3214 32.1473 49.8651 32.2238C50.4523 32.3032 51.0333 32.4234 51.6039 32.5834C52.1842 32.7442 52.7518 32.9479 53.302 33.1927C53.8359 33.4307 54.3465 33.7177 54.8275 34.0499V28.2345C53.8263 27.8557 52.788 27.5834 51.7298 27.422C50.4519 27.236 49.1617 27.1484 47.8704 27.1599C46.459 27.1523 45.0516 27.3126 43.6779 27.6373C42.4363 27.921 41.2557 28.4253 40.1923 29.1262C39.2045 29.7842 38.3888 30.6696 37.8137 31.7079C37.2043 32.861 36.9027 34.1518 36.9382 35.4556C36.8932 37.1797 37.4611 38.8638 38.5409 40.2087C39.8657 41.6998 41.5361 42.843 43.4057 43.5379C44.2589 43.89 45.0544 44.2346 45.7925 44.5718C46.4583 44.8681 47.0984 45.2194 47.7059 45.622C48.1959 45.9407 48.6263 46.3429 48.9775 46.8103C49.2862 47.2341 49.4501 47.7463 49.4446 48.2707C49.4474 48.6637 49.3466 49.0504 49.1521 49.392C48.9361 49.759 48.6326 50.0667 48.2686 50.2878C47.8131 50.5654 47.3148 50.7659 46.7939 50.8809C46.1153 51.0326 45.4213 51.1042 44.7261 51.0942C43.3617 51.0917 42.0082 50.8511 40.7265 50.3832C39.3876 49.9 38.1458 49.1812 37.0601 48.2606ZM26.5911 32.7459H34.7161V27.6129H12.0615V32.7459H20.15V55.6056H26.5911V32.7459Z" fill="white"/>
        </svg>
        
    );
  };
   
  export const Javascript = ({ className }: { className?: string }) => {
    return (
        <svg className={className} width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_11_31)">
        <path d="M0 0H65V65H0V0Z" fill="#F0DB4F"/>
        <path d="M59.6801 49.4976C59.2043 46.5318 57.2704 44.0418 51.5428 41.7186C49.5532 40.8042 47.3351 40.1493 46.6739 38.6416C46.4391 37.7642 46.4082 37.2699 46.5565 36.7386C46.9829 35.0147 49.0404 34.4772 50.6716 34.9715C51.7219 35.3237 52.7167 36.1331 53.316 37.4244C56.1212 35.6079 56.115 35.6202 58.0736 34.3722C57.3569 33.26 56.9738 32.7471 56.5043 32.2714C54.8175 30.3869 52.519 29.4169 48.8427 29.491C48.2062 29.5713 47.5637 29.6578 46.9273 29.7382C45.0922 30.2016 43.3436 31.1654 42.3179 32.4568C39.2409 35.9478 40.1183 42.0584 43.8626 44.5732C47.5513 47.3413 52.97 47.9715 53.662 50.5604C54.3355 53.7301 51.3327 54.7557 48.3484 54.3912C46.1487 53.934 44.9254 52.8156 43.6031 50.7828C41.1688 52.1916 41.1688 52.1916 38.6664 53.6312C39.2595 54.9288 39.8835 55.5157 40.8784 56.6403C45.5865 61.4164 57.3693 61.1816 59.4824 53.9525C59.5689 53.7053 60.1374 52.0494 59.6801 49.4976ZM35.336 29.874H29.2562C29.2562 35.1259 29.2315 40.3408 29.2315 45.5927C29.2315 48.9353 29.4045 52 28.8608 52.9391C27.971 54.7865 25.6664 54.558 24.616 54.1995C23.5471 53.6744 23.0034 52.9267 22.3731 51.8702C22.2001 51.5675 22.0704 51.3327 22.0271 51.3141C20.3774 52.3213 18.7338 53.3345 17.0841 54.3417C17.9059 56.0285 19.1169 57.4929 20.6678 58.4443C22.9848 59.8345 26.0988 60.2609 29.3551 59.5132C31.4744 58.8954 33.3032 57.6164 34.2609 55.6701C35.6449 53.1183 35.3484 50.029 35.336 46.6122C35.3669 41.039 35.336 35.4658 35.336 29.874Z" fill="#323330"/>
        </g>
        <defs>
        <clipPath id="clip0_11_31">
        <rect width="65" height="65" fill="white"/>
        </clipPath>
        </defs>
        </svg>
        
    );
  };
  export const Php = ({ className }: { className?: string }) => {
    return (
        <svg className={className} width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M32.5 47.4601C48.2056 47.4601 60.9375 40.7622 60.9375 32.5C60.9375 24.2377 48.2056 17.5398 32.5 17.5398C16.7944 17.5398 4.0625 24.2377 4.0625 32.5C4.0625 40.7622 16.7944 47.4601 32.5 47.4601Z" fill="url(#paint0_radial_11_39)"/>
<path d="M32.5 46.349C47.5919 46.349 59.8264 40.1486 59.8264 32.4999C59.8264 24.8513 47.5919 18.6509 32.5 18.6509C17.408 18.6509 5.17358 24.8513 5.17358 32.4999C5.17358 40.1486 17.408 46.349 32.5 46.349Z" fill="#6280B6"/>
<path d="M38.0351 36.9688L39.39 29.9935C39.583 29.3965 39.6148 28.7591 39.4821 28.1459C39.3494 27.5327 39.0569 26.9655 38.6344 26.5018C37.4549 25.6642 36.0106 25.2851 34.5719 25.4354H32.2298L32.9022 21.9822C32.9144 21.9179 32.9123 21.8517 32.8961 21.7883C32.8798 21.7249 32.8497 21.6659 32.808 21.6155C32.7663 21.565 32.714 21.5244 32.6547 21.4965C32.5955 21.4686 32.5309 21.4541 32.4654 21.4541H29.2154C29.1122 21.4541 29.0122 21.4899 28.9326 21.5555C28.8529 21.6211 28.7985 21.7124 28.7787 21.8136L27.3386 29.2196C27.2277 28.4277 26.8914 27.6845 26.3697 27.0786C25.7888 26.4969 25.088 26.0489 24.3162 25.7658C23.5444 25.4826 22.7202 25.3713 21.9009 25.4394H15.6406C15.5374 25.4394 15.4374 25.4752 15.3577 25.5408C15.2781 25.6064 15.2237 25.6977 15.2039 25.7989L12.2911 40.7896C12.2788 40.8539 12.2809 40.9201 12.2972 40.9835C12.3135 41.0469 12.3435 41.1059 12.3852 41.1563C12.4269 41.2068 12.4793 41.2474 12.5385 41.2753C12.5977 41.3032 12.6623 41.3177 12.7278 41.3177H15.9839C16.0871 41.3177 16.1871 41.2819 16.2667 41.2163C16.3464 41.1507 16.4008 41.0594 16.4206 40.9582L17.1254 37.3324H19.5629C20.6392 37.3611 21.7134 37.2241 22.7479 36.9261C23.6202 36.6375 24.4179 36.1596 25.0839 35.5266C25.6296 35.0295 26.0955 34.4512 26.4651 33.8122L25.8822 36.8083C25.8699 36.8726 25.872 36.9388 25.8883 37.0022C25.9045 37.0656 25.9346 37.1246 25.9763 37.1751C26.018 37.2255 26.0704 37.2661 26.1296 37.294C26.1888 37.3219 26.2534 37.3364 26.3189 37.3364H29.5689C29.6721 37.3365 29.7721 37.3006 29.8517 37.235C29.9314 37.1694 29.9858 37.0782 30.0056 36.9769L31.6042 28.7483H33.8264C34.7729 28.7483 35.0451 28.9372 35.1264 29.0185C35.2076 29.0997 35.3295 29.3536 35.1772 30.1743L33.8873 36.8063C33.8751 36.8706 33.8771 36.9368 33.8934 37.0002C33.9097 37.0636 33.9398 37.1226 33.9815 37.1731C34.0232 37.2235 34.0755 37.2641 34.1347 37.292C34.1939 37.3199 34.2586 37.3344 34.324 37.3344H37.6147C37.7159 37.3305 37.8128 37.2921 37.8892 37.2256C37.9657 37.1591 38.0172 37.0685 38.0351 36.9688ZM23.014 31.2122C22.9147 32.065 22.5099 32.853 21.8745 33.4304C21.0764 33.9268 20.1405 34.1553 19.2034 34.0824H17.7572L18.8033 28.6975H20.674C22.0492 28.6975 22.6017 28.9921 22.8251 29.2379C22.9956 29.5345 23.1006 29.8641 23.1332 30.2046C23.1658 30.5451 23.1251 30.8887 23.014 31.2122Z" fill="white"/>
<path d="M51.8903 27.0805C51.3094 26.4988 50.6086 26.0508 49.8368 25.7677C49.065 25.4846 48.2408 25.3732 47.4215 25.4413H41.1429C41.0397 25.4413 40.9397 25.4771 40.86 25.5427C40.7804 25.6083 40.726 25.6996 40.7062 25.8009L37.7934 40.7915C37.7811 40.8558 37.7832 40.922 37.7995 40.9854C37.8158 41.0488 37.8458 41.1078 37.8875 41.1582C37.9293 41.2087 37.9816 41.2493 38.0408 41.2772C38.1 41.3051 38.1647 41.3196 38.2301 41.3196H41.4964C41.5996 41.3196 41.6996 41.2838 41.7792 41.2182C41.8589 41.1526 41.9133 41.0614 41.9331 40.9601L42.6379 37.3343H45.0754C46.1516 37.363 47.2259 37.226 48.2604 36.928C49.1327 36.6394 49.9304 36.1615 50.5964 35.5285C51.7368 34.5007 52.5053 33.1245 52.782 31.6143C53.0005 30.8417 53.0337 30.0285 52.8787 29.2407C52.7238 28.4529 52.3851 27.7128 51.8903 27.0805ZM48.5042 31.2121C48.4048 32.0649 48 32.8528 47.3646 33.4302C46.5646 33.9272 45.6264 34.155 44.6874 34.0802H43.2453L44.2914 28.6954H46.1621C47.5373 28.6954 48.0898 28.9899 48.3132 29.2357C48.4843 29.5324 48.5898 29.8623 48.6228 30.2032C48.6557 30.5441 48.6153 30.8881 48.5042 31.2121Z" fill="white"/>
<path d="M20.6741 28.2506C21.1123 28.1954 21.5572 28.2277 21.9829 28.3455C22.4086 28.4634 22.8067 28.6644 23.1542 28.9371C23.3784 29.2824 23.5214 29.674 23.5725 30.0824C23.6235 30.4909 23.5812 30.9057 23.4487 31.2954C23.3326 32.2552 22.8687 33.139 22.1447 33.7796C21.2715 34.342 20.2394 34.6058 19.2034 34.5312H17.2169L18.4356 28.2567L20.6741 28.2506ZM12.7177 40.8768H15.9839L16.7578 36.8915H19.5548C20.5844 36.9196 21.6121 36.7888 22.6017 36.5035C23.4139 36.2354 24.1563 35.7899 24.7752 35.1995C25.8463 34.2359 26.5678 32.9443 26.8267 31.527C27.0317 30.8222 27.0677 30.0789 26.9318 29.3576C26.796 28.6362 26.492 27.9571 26.0447 27.3751C25.5053 26.8416 24.856 26.4321 24.142 26.1753C23.4281 25.9185 22.6668 25.8205 21.9111 25.8882H15.6406L12.7177 40.8768Z" fill="#000004"/>
<path d="M29.2236 21.9009H32.4736L31.6875 25.8862H34.5739C35.8996 25.7474 37.2315 26.0844 38.3318 26.8368C38.6959 27.2507 38.9448 27.7531 39.0536 28.2936C39.1623 28.8341 39.127 29.3936 38.9513 29.9162L37.5964 36.8915H34.3078L35.5977 30.2595C35.6875 30.0063 35.7196 29.7363 35.6914 29.4692C35.6633 29.2021 35.5758 28.9446 35.4352 28.7157C34.9648 28.3788 34.3838 28.2335 33.8102 28.3095H31.2203L29.5507 36.8976H26.3007L29.2236 21.9009Z" fill="#000004"/>
<path d="M46.1642 28.2506C46.6024 28.1954 47.0473 28.2277 47.473 28.3455C47.8987 28.4634 48.2968 28.6644 48.6443 28.9371C48.8686 29.2824 49.0116 29.674 49.0626 30.0824C49.1136 30.4909 49.0713 30.9057 48.9389 31.2954C48.8227 32.2552 48.3588 33.139 47.6348 33.7796C46.7599 34.3433 45.7254 34.6071 44.6875 34.5312H42.7009L43.9196 28.2567L46.1642 28.2506ZM38.2078 40.8768H41.474L42.2479 36.8915H45.045C46.0745 36.9196 47.1022 36.7888 48.0918 36.5035C48.904 36.2354 49.6464 35.7899 50.2653 35.1995C51.3364 34.2359 52.0579 32.9443 52.3168 31.527C52.5218 30.8222 52.5578 30.0789 52.4219 29.3576C52.2861 28.6362 51.9821 27.9571 51.5348 27.3751C50.9954 26.8416 50.3461 26.4321 49.6322 26.1753C48.9182 25.9185 48.1569 25.8205 47.4012 25.8882H41.1206L38.2078 40.8768Z" fill="#000004"/>
<defs>
<radialGradient id="paint0_radial_11_39" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(21.1372 22.8007) scale(37.3425)">
<stop stop-color="white"/>
<stop offset="0.5" stop-color="#4C6B96"/>
<stop offset="1" stop-color="#231F20"/>
</radialGradient>
</defs>
</svg>

        
    );
  };
