"use client";
import { animate, motion } from "framer-motion";
import React, { useEffect } from "react";
import { cn } from  "../../utils/cn";


export function Tools() {
  return (
      <CardSkeletonContainer>
        <Skeleton />
      </CardSkeletonContainer>
  );
}

const Skeleton = () => {
  const scale = [1, 1.1, 1];
  const transform = ["translateY(0px)", "translateY(-4px)", "translateY(0px)"];
  const sequence = [
    [
      ".circle-1",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
    [
      ".circle-2",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
    [
      ".circle-3",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
    [
      ".circle-4",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
    [
      ".circle-5",
      {
        scale,
        transform,
      },
      { duration: 0.8 },
    ],
  ];

  useEffect(() => {
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    animate(sequence, {
      repeat: Infinity,
      repeatDelay: 1,
    });
  }, []);
  return (
    <div className="p-8 overflow-hidden h-full relative flex items-center justify-center">
      <div className="flex flex-row flex-shrink-0 justify-center items-center gap-2">
        <Container className="h-8 w-8 circle-1">
          <Canva className="h-4 w-4 " />
        </Container>
        <Container className="h-12 w-12 circle-2">
          <Git className="h-6 w-6 dark:text-white" />
        </Container>
        <Container className="circle-3">
          <Figma className="h-10 w-10 " />
        </Container>
        <Container className="h-12 w-12 circle-4">
          <Postman className="h-10 w-6 " />
        </Container>
      </div>

      <div className="h-40 w-px absolute top-20 m-auto z-40 bg-gradient-to-b from-transparent via-cyan-500 to-transparent animate-move">
        <div className="w-10 h-32 top-1/2 -translate-y-1/2 absolute -left-10">
          <Sparkles />
        </div>
      </div>
    </div>
  );
};
const Sparkles = () => {
  const randomMove = () => Math.random() * 2 - 1;
  const randomOpacity = () => Math.random();
  const random = () => Math.random();
  return (
    <div className="absolute inset-0">
      {[...Array(12)].map((_, i) => (
        <motion.span
          key={`star-${i}`}
          animate={{
            top: `calc(${random() * 100}% + ${randomMove()}px)`,
            left: `calc(${random() * 100}% + ${randomMove()}px)`,
            opacity: randomOpacity(),
            scale: [1, 1.2, 0],
          }}
          transition={{
            duration: random() * 2 + 4,
            repeat: Infinity,
            ease: "linear",
          }}
          style={{
            position: "absolute",
            top: `${random() * 100}%`,
            left: `${random() * 100}%`,
            width: `2px`,
            height: `2px`,
            borderRadius: "50%",
            zIndex: 1,
          }}
          className="inline-block bg-black dark:bg-white"
        ></motion.span>
      ))}
    </div>
  );
};



export const CardSkeletonContainer = ({
  className,
  children,
  showGradient = true,
}: {
  className?: string;
  children: React.ReactNode;
  showGradient?: boolean;
}) => {
  return (
    <div
      className={cn(
        "h-[7rem] md:h-[10rem] rounded-xl z-40",
        className,
        showGradient &&
          "bg-neutral-300 dark:bg-[rgba(40,40,40,0.70)] [mask-image:radial-gradient(50%_50%_at_50%_50%,white_0%,transparent_100%)]"
      )}
    >
      {children}
    </div>
  );
};

const Container = ({
  className,
  children,
}: {
  className?: string;
  children: React.ReactNode;
}) => {
  return (
    <div
      className={cn(
        `h-16 w-16 rounded-full flex items-center justify-center bg-[rgba(248,248,248,0.01)]
    shadow-[0px_0px_8px_0px_rgba(248,248,248,0.25)_inset,0px_32px_24px_-16px_rgba(0,0,0,0.40)]
    `,
        className
      )}
    >
      {children}
    </div>
  );
};
export const Figma = ({ className }: { className?: string }) => {
    return (
        <svg className={className} width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_11_80)">
        <path d="M32.5 32.5001C32.5 26.5171 39.7738 21.6667 48.7467 21.6667C57.7194 21.6667 64.9935 26.5171 64.9935 32.5001C64.9935 38.4832 57.7194 43.3334 48.7467 43.3334C39.7738 43.3334 32.5 38.4832 32.5 32.5001Z" fill="#1ABCFE"/>
        <path d="M0.00646973 54.1666C0.00646973 48.1836 7.28031 43.3333 16.2532 43.3333H32.5V54.1666C32.5 60.1497 25.2261 64.9999 16.2532 64.9999C7.28031 64.9999 0.00646973 60.1497 0.00646973 54.1666Z" fill="#0ACF83"/>
        <path d="M32.5 0.000244141V21.6668H48.7467C57.7197 21.6668 64.9935 16.8166 64.9935 10.8334C64.9935 4.85029 57.7197 0.000244141 48.7467 0.000244141H32.5Z" fill="#FF7262"/>
        <path d="M0.00646973 10.8333C0.00646973 16.8165 7.28031 21.6667 16.2532 21.6667H32.5V0H16.2532C7.28031 0 0.00646973 4.85035 0.00646973 10.8333Z" fill="#F24E1E"/>
        <path d="M0.00646973 32.5001C0.00646973 38.4832 7.28031 43.3334 16.2532 43.3334H32.5V21.6667H16.2532C7.28031 21.6667 0.00646973 26.5171 0.00646973 32.5001Z" fill="#A259FF"/>
        </g>
        <defs>
        <clipPath id="clip0_11_80">
        <rect width="65" height="65" fill="white"/>
        </clipPath>
        </defs>
        </svg>
        

        
    );
  };
   
export const Git = ({ className }: { className?: string }) => {
    return (
        <svg className={className} width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_11_91)">
            <path d="M63.7741 29.6039L35.3945 1.2258C33.7611 -0.408599 31.1104 -0.408599 29.475 1.2258L23.5818 7.11896L31.0576 14.5947C32.7948 14.0077 34.7869 14.4015 36.1717 15.7863C37.5631 17.18 37.9542 19.1892 37.3529 20.932L44.5575 28.1368C46.3006 27.5363 48.3118 27.9248 49.7039 29.3193C51.6496 31.2642 51.6496 34.4164 49.7039 36.3626C47.7577 38.3091 44.6055 38.3091 42.6583 36.3626C41.1948 34.8976 40.8332 32.7483 41.5741 30.9453L34.8552 24.2264L34.8545 41.9077C35.3415 42.1485 35.7864 42.4666 36.1717 42.8497C38.1174 44.7946 38.1174 47.9471 36.1717 49.8948C34.2255 51.8402 31.0718 51.8402 29.1284 49.8948C27.1827 47.9471 27.1827 44.7948 29.1284 42.8499C29.5946 42.3834 30.1488 42.014 30.7587 41.7629V23.9169C30.1479 23.6675 29.5934 23.2979 29.1284 22.8299C27.6542 21.3578 27.2997 19.1947 28.0551 17.3846L20.6857 10.0145L1.22637 29.4726C-0.408789 31.1085 -0.408789 33.7596 1.22637 35.3942L29.6065 63.7728C31.2404 65.4075 33.8906 65.4075 35.5266 63.7728L63.7739 35.526C65.4085 33.8908 65.4088 31.2383 63.7741 29.6039Z" fill="#DE4C36"/>
            </g>
            <defs>
            <clipPath id="clip0_11_91">
            <rect width="65" height="65" fill="white"/>
            </clipPath>
            </defs>
        </svg>


    );
  };
  export const Canva = ({ className }: { className?: string }) => {
    return (
        <svg className={className} width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_11_93)">
            <path d="M32.5 65C50.4493 65 65 50.4493 65 32.5C65 14.5507 50.4493 0 32.5 0C14.5507 0 0 14.5507 0 32.5C0 50.4493 14.5507 65 32.5 65Z" fill="#23BEC7"/>
            <path d="M33.2566 33.048C34.2071 32.2131 34.9787 31.4266 35.9963 30.9979C36.5927 30.7482 37.2525 30.394 37.8191 30.942C38.3856 31.4899 38.0278 32.0901 37.8563 32.679C37.5134 33.8606 37.1668 35.046 36.8536 36.235C36.7605 36.5817 36.6039 36.9805 36.958 37.2899C37.3121 37.5993 37.7557 37.3943 38.1061 37.2154C39.4033 36.5519 40.4581 35.7654 40.2941 34.0209C40.1972 32.9772 40.2941 31.8664 41.2595 31.1209C41.6323 30.8264 42.0833 30.4835 42.5567 30.8115C43.0301 31.1395 42.6909 31.557 42.5567 31.9298C42.0988 33.3355 41.9712 34.8279 42.184 36.2909C42.2324 36.619 42.184 37.0924 42.4859 37.2116C42.8996 37.3682 43.086 36.8389 43.3507 36.6227C43.6153 36.4065 43.7942 36.1008 44.0253 35.8474C44.6367 35.1801 44.9721 34.6471 44.1595 33.7339C43.2165 32.679 43.4998 30.614 44.4279 29.6336C44.6828 29.3271 45.0274 29.1082 45.4133 29.0079C45.7992 28.9076 46.2068 28.9309 46.5787 29.0745C47.3875 29.369 47.6522 30.066 47.6746 30.8823C47.6969 31.7993 47.3018 32.6045 46.9924 33.4916C47.8945 33.719 48.4536 33.212 48.9605 32.6641C50.1832 31.3371 51.5996 30.4947 53.4783 30.6922C54.8388 30.8339 55.6178 31.5682 55.547 32.638C55.5202 32.8749 55.437 33.102 55.3044 33.3001C55.1718 33.4982 54.9935 33.6616 54.7847 33.7766C54.5758 33.8916 54.3425 33.9549 54.1041 33.9611C53.8658 33.9673 53.6294 33.9162 53.4149 33.8122C52.99 33.5848 53.0421 33.376 53.4149 33.1598C53.5578 33.0979 53.6726 32.9849 53.7367 32.8429C53.8008 32.7009 53.8096 32.5402 53.7615 32.392C53.7028 32.2147 53.5922 32.0591 53.444 31.9454C53.2957 31.8318 53.1168 31.7653 52.9303 31.7546C52.417 31.6783 51.8937 31.7951 51.4617 32.0826C50.0974 32.9548 49.3333 35.3777 49.9707 36.8538C50.3434 37.7409 51.0368 37.9087 51.7562 37.2787C52.1531 36.8984 52.4523 36.4278 52.6284 35.907C52.7336 35.5825 52.8828 35.274 53.072 34.99C53.4112 34.539 53.8808 34.1402 54.4698 34.3825C55.0587 34.6248 54.7568 35.2361 54.6599 35.6498C54.3132 37.0849 54.0187 38.4827 55.2339 39.6904C55.266 39.7198 55.2916 39.7555 55.3092 39.7952C55.3267 39.835 55.3358 39.878 55.3358 39.9215C55.3358 39.965 55.3267 40.008 55.3092 40.0478C55.2916 40.0876 55.266 40.1233 55.2339 40.1526C55.1604 40.2247 55.0659 40.2715 54.964 40.2862C54.8622 40.301 54.7582 40.2829 54.6673 40.2346C54.2459 40.0868 53.8578 39.8573 53.5252 39.5592C53.1926 39.2611 52.922 38.9004 52.729 38.4976C52.606 38.2292 52.5538 37.8378 52.1177 38.2218C51.7415 38.6074 51.2387 38.8442 50.7018 38.8887C50.1649 38.9332 49.63 38.7824 49.1954 38.4641C48.1368 37.7857 47.7566 36.7681 47.8535 35.5492C47.8721 35.3106 47.9019 35.0795 47.9318 34.8037C46.7129 34.9043 45.7214 35.1764 45.0243 36.2947C44.4198 37.2187 43.5965 37.9792 42.6275 38.5088C41.3565 39.2543 40.8607 39.0232 40.5178 37.6254C40.4693 37.4316 40.4283 37.2526 40.3538 36.8799C39.5281 37.6193 38.5828 38.2129 37.5581 38.6355C35.631 39.3214 34.5128 38.438 34.7961 36.399C34.9708 35.3519 35.2596 34.3269 35.6571 33.3425C35.7466 33.1002 35.9628 32.802 35.6571 32.597C35.4335 32.4553 35.1986 32.6939 35.0234 32.843C33.8344 33.8532 32.787 34.9714 32.444 36.5705C32.3644 37.042 32.2293 37.5025 32.0415 37.9422C31.9283 38.2362 31.72 38.484 31.4499 38.6461C31.1797 38.8082 30.8631 38.8753 30.5505 38.8368C29.8795 38.7175 30.3119 38.0317 30.1255 37.6105C29.4098 37.9832 28.724 38.356 28.0158 38.6803C27.5051 38.9151 26.8379 39.1015 26.4651 38.6616C25.8426 37.9161 25.4214 38.1733 24.7654 38.5908C23.8074 39.2021 22.7078 38.9412 21.8393 37.931C21.3995 37.4204 21.1721 37.4539 20.7472 37.9087C19.8867 38.7963 18.8644 39.5112 17.7353 40.0147C13.3034 42.1207 8.94592 39.7575 8.6999 34.8745C8.40916 29.3615 10.7537 24.9743 15.3609 21.914C15.9561 21.5006 16.6356 21.2244 17.3504 21.1051C18.0652 20.9859 18.7976 21.0266 19.4947 21.2244C20.3126 21.4383 21.0312 21.9286 21.5286 22.6121C22.0259 23.2957 22.2714 24.1303 22.2232 24.9743C22.1689 25.784 21.8582 26.5553 21.3361 27.1766C20.8141 27.7978 20.1078 28.2367 19.3195 28.4297C19.0549 28.4893 18.7119 28.5937 18.574 28.3439C18.3653 28.0085 18.697 27.7811 18.9244 27.5984C20.1694 26.5473 20.3819 25.1793 20.147 23.6771C19.9234 22.2756 18.9244 21.709 17.5937 22.2197C16.6385 22.6161 15.796 23.2422 15.141 24.0424C12.9397 26.4748 11.5633 29.5406 11.2085 32.802C11.0291 34.21 11.2799 35.6394 11.9279 36.9022C12.8747 38.7101 14.4812 39.5115 16.4643 39.0418C18.0334 38.6496 19.4735 37.8557 20.6428 36.7382C20.8066 36.5669 20.9346 36.3646 21.0191 36.1431C21.1036 35.9216 21.1429 35.6854 21.1348 35.4485C21.4069 32.6156 23.8559 30.491 26.5919 30.6997C27.2518 30.7202 27.8805 30.986 28.355 31.4452C28.5805 31.6561 28.7349 31.9318 28.797 32.2343C28.8591 32.5368 28.8258 32.8511 28.7016 33.1338C28.437 33.7749 27.848 33.9836 27.1808 33.9501C27.0413 33.9652 26.9002 33.9456 26.7701 33.8929C26.64 33.8402 26.525 33.7561 26.4353 33.6481C26.1893 33.2754 26.659 33.2493 26.8081 33.0629C27.2255 32.5411 26.9907 31.9186 26.275 31.7732C25.9209 31.6937 25.552 31.7098 25.2062 31.8198C24.8603 31.9299 24.55 32.1299 24.3069 32.3994C23.8001 32.9141 23.4224 33.5414 23.2047 34.2301C22.987 34.9189 22.9355 35.6493 23.0545 36.3618C23.129 36.9134 23.3639 37.4539 23.9714 37.6179C24.579 37.7819 24.9741 37.3272 25.3469 36.9022C25.6228 36.5497 25.8222 36.1434 25.9321 35.7095C26.0213 35.3016 26.2428 34.9347 26.562 34.6658C26.9348 34.3787 27.3448 34.1439 27.7847 34.4011C28.2245 34.6583 27.9561 35.0907 27.9561 35.4485C27.9561 36.1046 27.2479 36.8687 28.1239 37.3719C28.5935 37.6403 30.4871 36.2127 30.6362 35.5417C30.871 34.4719 31.0611 33.391 31.2736 32.3174C31.2997 31.939 31.443 31.5782 31.6836 31.2849C31.8647 31.0784 32.1044 30.9321 32.3709 30.8655C32.6373 30.7989 32.9177 30.8152 33.1746 30.9122C33.7375 31.147 33.4579 31.6577 33.402 32.0901C33.3722 32.3473 33.3274 32.6082 33.2566 33.048ZM45.8481 30.5655C45.7512 30.3046 45.5946 30.0511 45.2741 30.0847C44.9535 30.1182 44.8603 30.4127 44.8342 30.6885C44.7932 31.097 44.8491 31.5094 44.9974 31.8921C45.1457 32.2749 45.3823 32.6173 45.6878 32.8915C46.0398 32.166 46.0972 31.3324 45.8481 30.5655Z" fill="white"/>
            </g>
            <defs>
            <clipPath id="clip0_11_93">
            <rect width="65" height="65" fill="white"/>
            </clipPath>
            </defs>
        </svg>
        

        
    );
  };
   
  export const Postman = ({ className }: { className?: string }) => {
    return (
        <svg className={className} width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clip-path="url(#clip0_11_96)">
        <path d="M64.7342 36.6268C67.0088 18.82 54.4335 2.5404 36.6592 0.26581C18.885 -2.00878 2.5404 10.5665 0.26581 28.3407C-2.00878 46.115 10.5665 62.4271 28.3407 64.7342C46.1475 67.0088 62.4271 54.4335 64.7342 36.6268Z" fill="#FF6C37"/>
        <path d="M44.2303 20.8672L30.5178 34.5798L26.651 30.713C40.1361 17.2279 41.4683 18.3977 44.2303 20.8672Z" fill="white"/>
        <path d="M30.5178 34.9047C30.4203 34.9047 30.3553 34.8722 30.2904 34.8072L26.3911 30.9404C26.2611 30.8104 26.2611 30.6154 26.3911 30.4855C40.1036 16.7729 41.5333 18.0727 44.4253 20.6722C44.4903 20.7372 44.5228 20.8022 44.5228 20.8997C44.5228 20.9972 44.4903 21.0622 44.4253 21.1271L30.7128 34.8072C30.6803 34.8722 30.5828 34.9047 30.5178 34.9047ZM27.1059 30.7129L30.5178 34.1248L43.7429 20.8997C41.3384 18.7551 39.7137 18.1052 27.1059 30.7129Z" fill="#FF6C37"/>
        <path d="M34.4497 38.5114L30.7129 34.7745L44.4254 21.062C48.0973 24.7663 42.6057 30.7778 34.4497 38.5114Z" fill="white"/>
        <path d="M34.4497 38.8363C34.3522 38.8363 34.2872 38.8038 34.2222 38.7388L30.4854 35.002C30.4204 34.937 30.4204 34.872 30.4204 34.7745C30.4204 34.677 30.4529 34.6121 30.5179 34.5471L44.2304 20.8345C44.3604 20.7046 44.5554 20.7046 44.6853 20.8345C45.5302 21.6144 45.9851 22.7192 45.9526 23.8565C45.8876 27.4633 41.7934 32.045 34.7096 38.7388C34.6122 38.8038 34.5147 38.8363 34.4497 38.8363ZM31.1678 34.7745C33.2474 36.8867 34.1247 37.7315 34.4497 38.0564C39.9087 32.8574 45.2052 27.5283 45.2377 23.8565C45.2702 23.0117 44.9453 22.1668 44.3929 21.5169L31.1678 34.7745Z" fill="#FF6C37"/>
        <path d="M26.716 30.8103L29.478 33.5723C29.543 33.6373 29.543 33.7023 29.478 33.7673C29.4455 33.7998 29.4455 33.7998 29.413 33.7998L23.6941 35.0346C23.4016 35.0671 23.1417 34.8721 23.0767 34.5796C23.0442 34.4172 23.1092 34.2547 23.2067 34.1572L26.5211 30.8428C26.5861 30.7778 26.6835 30.7453 26.716 30.8103Z" fill="white"/>
        <path d="M23.5966 35.3595C23.1091 35.3595 22.7517 34.9695 22.7517 34.4821C22.7517 34.2547 22.8492 34.0272 23.0117 33.8647L26.3261 30.5503C26.521 30.3878 26.781 30.3878 26.9759 30.5503L29.7379 33.3123C29.9329 33.4748 29.9329 33.7672 29.7379 33.9622C29.673 34.0272 29.608 34.0597 29.5105 34.0922L23.7915 35.327C23.7265 35.327 23.6615 35.3595 23.5966 35.3595ZM26.6185 31.1677L23.4341 34.3521C23.3691 34.4171 23.3366 34.5146 23.4016 34.6121C23.4341 34.7096 23.5316 34.7421 23.6291 34.7096L28.9906 33.5398L26.6185 31.1677Z" fill="#FF6C37"/>
        <path d="M51.4766 13.2636C49.397 11.249 46.0501 11.314 44.0355 13.4261C42.0208 15.5382 42.0858 18.8526 44.1979 20.8672C45.9201 22.5244 48.5197 22.8169 50.5668 21.5821L46.8625 17.8778L51.4766 13.2636Z" fill="white"/>
        <path d="M47.8373 22.6543C44.7503 22.6543 42.2483 20.1523 42.2483 17.0653C42.2483 13.9784 44.7503 11.4763 47.8373 11.4763C49.267 11.4763 50.6643 12.0287 51.7041 13.036C51.7691 13.101 51.8016 13.166 51.8016 13.2635C51.8016 13.361 51.7691 13.426 51.7041 13.491L47.3174 17.8777L50.7618 21.322C50.8917 21.452 50.8917 21.647 50.7618 21.777C50.7293 21.8095 50.7293 21.8095 50.6968 21.842C49.8519 22.3619 48.8446 22.6543 47.8373 22.6543ZM47.8373 12.1587C45.1078 12.1587 42.8982 14.3683 42.9307 17.0978C42.9307 19.8273 45.1403 22.0369 47.8698 22.0044C48.6171 22.0044 49.3645 21.842 50.0469 21.4845L46.635 18.1051C46.57 18.0401 46.5375 17.9751 46.5375 17.8777C46.5375 17.7802 46.57 17.7152 46.635 17.6502L50.9892 13.296C50.1119 12.5486 49.0071 12.1587 47.8373 12.1587Z" fill="#FF6C37"/>
        <path d="M51.5741 13.3609L51.5091 13.2959L46.8624 17.8776L50.5343 21.5494C50.8917 21.322 51.2491 21.062 51.5416 20.7696C53.6212 18.7224 53.6212 15.408 51.5741 13.3609Z" fill="white"/>
        <path d="M50.5667 21.9069C50.4693 21.9069 50.4043 21.8744 50.3393 21.8094L46.635 18.105C46.57 18.0401 46.5375 17.9751 46.5375 17.8776C46.5375 17.7801 46.57 17.7151 46.635 17.6501L51.2491 13.036C51.3791 12.906 51.5741 12.906 51.704 13.036L51.8015 13.1009C53.9786 15.2781 53.9786 18.7874 51.834 20.997C51.5091 21.322 51.1516 21.6144 50.7617 21.8419C50.6642 21.8744 50.5992 21.9069 50.5667 21.9069ZM47.3173 17.8776L50.5992 21.1595C50.8592 20.997 51.1191 20.7696 51.3141 20.5746C53.1663 18.7224 53.2638 15.7005 51.4766 13.7508L47.3173 17.8776Z" fill="#FF6C37"/>
        <path d="M44.7828 21.4521C44.003 20.6722 42.7357 20.6722 41.9559 21.4521L29.7056 33.7024L31.7527 35.7495L44.7179 24.3766C45.5627 23.6617 45.6277 22.3944 44.9128 21.5496C44.8478 21.5171 44.8153 21.4846 44.7828 21.4521Z" fill="white"/>
        <path d="M31.7201 36.0744C31.6226 36.0744 31.5576 36.0419 31.4926 35.977L29.4455 33.9298C29.3155 33.7998 29.3155 33.6049 29.4455 33.4749L41.6958 21.2246C42.6056 20.3148 44.0679 20.3148 44.9777 21.2246C45.8875 22.1344 45.8875 23.5967 44.9777 24.5065C44.9452 24.539 44.9127 24.5715 44.8802 24.604L31.9151 35.977C31.8826 36.0419 31.8176 36.0744 31.7201 36.0744ZM30.1604 33.7024L31.7526 35.2946L44.4903 24.1166C45.2052 23.5317 45.2702 22.4594 44.6853 21.7445C44.1004 21.0296 43.0281 20.9647 42.3132 21.5496C42.2807 21.582 42.2482 21.6145 42.1832 21.647L30.1604 33.7024Z" fill="#FF6C37"/>
        <path d="M20.3146 47.6424C20.1847 47.7074 20.1197 47.8374 20.1522 47.9673L20.7046 50.3069C20.8345 50.6319 20.6396 51.0218 20.2821 51.1193C20.0222 51.2168 19.7297 51.1193 19.5673 50.9243L15.9929 47.3824L27.6583 35.717L31.6876 35.782L34.4171 38.5115C33.7672 39.0639 29.8354 42.8658 20.3146 47.6424Z" fill="white"/>
        <path d="M20.0548 51.4442C19.7948 51.4442 19.5348 51.3467 19.3724 51.1518L15.8305 47.6099C15.7655 47.5449 15.733 47.4799 15.733 47.3824C15.733 47.2849 15.7655 47.22 15.8305 47.155L27.4959 35.4896C27.5609 35.4246 27.6584 35.3921 27.7234 35.3921L31.7526 35.4571C31.8501 35.4571 31.9151 35.4896 31.9801 35.5546L34.7096 38.2841C34.7746 38.3491 34.8071 38.4465 34.8071 38.544C34.8071 38.6415 34.7746 38.7065 34.6771 38.7715L34.4497 38.9664C31.0053 41.9884 26.3261 45.0104 20.5097 47.9023L21.0621 50.2094C21.1596 50.6318 20.9646 51.0868 20.5747 51.3142C20.3797 51.4117 20.2172 51.4442 20.0548 51.4442ZM16.4804 47.3824L19.8273 50.6968C19.9248 50.8593 20.1197 50.9243 20.2822 50.8268C20.4447 50.7293 20.5097 50.5344 20.4122 50.3719L19.8598 48.0323C19.7948 47.7399 19.9248 47.4799 20.1847 47.3499C25.9362 44.458 30.5829 41.4685 33.9947 38.5115L31.5902 36.107L27.8533 36.042L16.4804 47.3824Z" fill="#FF6C37"/>
        <path d="M13.2309 50.1768L16.0254 47.3823L20.1847 51.5416L13.5559 51.0867C13.2634 51.0542 13.0684 50.7942 13.1009 50.5018C13.1009 50.3718 13.1334 50.2418 13.2309 50.1768Z" fill="white"/>
        <path d="M20.1847 51.834L13.5234 51.3791C13.036 51.3466 12.7111 50.9242 12.7436 50.4368C12.7761 50.2418 12.841 50.0469 13.0035 49.9169L15.798 47.1224C15.928 46.9924 16.123 46.9924 16.2529 47.1224L20.4122 51.2816C20.5097 51.3791 20.5422 51.5091 20.4772 51.6391C20.4122 51.769 20.3147 51.834 20.1847 51.834ZM16.0255 47.8373L13.4584 50.4043C13.361 50.4693 13.361 50.6317 13.4584 50.6967C13.4909 50.7292 13.5234 50.7617 13.5884 50.7617L19.3399 51.1517L16.0255 47.8373Z" fill="#FF6C37"/>
        <path d="M26.5211 37.2117C26.3261 37.2117 26.1962 37.0493 26.1962 36.8868C26.1962 36.7893 26.2287 36.7243 26.2936 36.6593L29.4456 33.5074C29.5756 33.3774 29.7705 33.3774 29.9005 33.5074L31.9476 35.5545C32.0451 35.652 32.0776 35.7495 32.0451 35.8795C32.0126 35.9769 31.9151 36.0744 31.7852 36.1069L26.5861 37.2117C26.5536 37.2117 26.5211 37.2117 26.5211 37.2117ZM29.673 34.1898L27.5284 36.3344L31.0378 35.587L29.673 34.1898Z" fill="#FF6C37"/>
        <path d="M31.6877 35.782L28.1133 36.5618C27.8534 36.6268 27.5934 36.4643 27.5284 36.2044C27.4959 36.0419 27.5284 35.8795 27.6584 35.7495L29.6406 33.7673L31.6877 35.782Z" fill="white"/>
        <path d="M28.0483 36.8868C27.5934 36.8868 27.236 36.5293 27.236 36.0744C27.236 35.847 27.3334 35.652 27.4634 35.4895L29.4456 33.5074C29.5755 33.3774 29.7705 33.3774 29.9005 33.5074L31.9476 35.5545C32.0451 35.652 32.0776 35.7495 32.0451 35.8795C32.0126 35.9769 31.9151 36.0744 31.7851 36.1069L28.2108 36.8868C28.1458 36.8868 28.0808 36.8868 28.0483 36.8868ZM29.673 34.1898L27.9183 35.9445C27.8534 36.0094 27.8533 36.0744 27.8858 36.1394C27.9183 36.2044 27.9833 36.2369 28.0808 36.2369L31.0703 35.587L29.673 34.1898Z" fill="#FF6C37"/>
        <path d="M51.6065 16.4804C51.5415 16.2855 51.3141 16.188 51.1191 16.253C50.9241 16.3179 50.8267 16.5454 50.8917 16.7404C50.8917 16.7729 50.9241 16.8054 50.9241 16.8379C51.1191 17.2278 51.0541 17.7152 50.7942 18.0726C50.6642 18.2351 50.6967 18.4626 50.8267 18.5925C50.9891 18.7225 51.2166 18.69 51.3466 18.5276C51.834 17.9102 51.9315 17.1303 51.6065 16.4804Z" fill="#FF6C37"/>
        </g>
        <defs>
        <clipPath id="clip0_11_96">
        <rect width="65" height="65" fill="white"/>
        </clipPath>
        </defs>
        </svg>


        
    );
  };
 
